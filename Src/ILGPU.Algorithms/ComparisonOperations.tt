// ---------------------------------------------------------------------------------------
//                                   ILGPU Algorithms
//                        Copyright (c) 2020-2021 ILGPU Project
//                                    www.ilgpu.net
//
// File: ComparisonOperations.tt/ComparisonOperations.cs
//
// This file is part of ILGPU and is distributed under the University of Illinois Open
// Source License. See LICENSE.txt for details.
// ---------------------------------------------------------------------------------------

<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ include file="TypeInformation.ttinclude"#>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
var comparisonTypes = NumericTypes;
#>
using System;

namespace ILGPU.Algorithms.ComparisonOperations
{
<#  foreach (var type in comparisonTypes) { #>
    /// <summary>
    /// Represents an comparison between two elements of type <#= type.Type #>.
    /// </summary>
<#      if (!type.IsCLSCompliant) { #>
    [CLSCompliant(false)]
<#      } #>
    public readonly struct Comparison<#= type.Name #>
        : IComparisonOperation<<#= type.Type #>>
    {
        /// <summary>
        /// Compares two elements.
        /// </summary>
        /// <param name="first">The first operand.</param>
        /// <param name="second">The second operand.</param>
        /// <returns>
        /// Less than zero, if first is less than second.
        /// Zero, if first is equal to second.
        /// Greater than zero, if first is greater than second.
        /// </returns>
        public int Compare(<#= type.Type #> first, <#= type.Type #> second) =>
            first.CompareTo(second);
    }

<#  } #>
}