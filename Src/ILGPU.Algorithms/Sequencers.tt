// ---------------------------------------------------------------------------------------
//                                   ILGPU Algorithms
//                        Copyright (c) 2019-2021 ILGPU Project
//                                    www.ilgpu.net
//
// File: Sequencers.tt/Sequencers.cs
//
// This file is part of ILGPU and is distributed under the University of Illinois Open
// Source License. See LICENSE.txt for details.
// ---------------------------------------------------------------------------------------

<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ include file="TypeInformation.ttinclude"#>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
#pragma warning disable IDE0004 // Cast is redundant

using System;

namespace ILGPU.Algorithms.Sequencers
{
<# foreach (var type in IntTypes) { #>
    // Helpers for <#= type.Name #>

    /// <summary>
    /// Represents an identity implementation of a sequencer.
    /// </summary>
<#      if (!type.IsCLSCompliant) { #>
    [CLSCompliant(false)]
<#      } #>
    public readonly struct <#= type.Name #>Sequencer : ISequencer<<#= type.Type #>>
    {
        /// <summary cref="ISequencer{T}.ComputeSequenceElement(LongIndex1D)" />
        public <#= type.Type #> ComputeSequenceElement(LongIndex1D sequenceIndex) =>
            (<#= type.Type #>)sequenceIndex.X;
    }

<# } #>
}

#pragma warning restore IDE0004