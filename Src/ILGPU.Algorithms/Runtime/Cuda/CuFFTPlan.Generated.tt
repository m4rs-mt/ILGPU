// ---------------------------------------------------------------------------------------
//                                   ILGPU Algorithms
//                           Copyright (c) 2021 ILGPU Project
//                                    www.ilgpu.net
//
// File: CuFFTPlan.Generated.tt/CuFFTPlan.Generated.cs
//
// This file is part of ILGPU and is distributed under the University of Illinois Open
// Source License. See LICENSE.txt for details.
// ---------------------------------------------------------------------------------------

<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ include file="./API/CuFFT.ttinclude"#>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

using ILGPU.Util;
using System.Numerics;

namespace ILGPU.Runtime.Cuda
{
    partial class CuFFTPlan
    {
        #region Execution

<# foreach (var (displayName, transformCode) in InputCombinations) { #>
<#
        foreach (var inputType in InputTypes) {
            foreach (var complexType in inputType.ComplexTypes) {
#>
<#              if (transformCode == inputType.TypeCodeC2C) { #>
        /// <summary>
        /// Executes the plan on the given arrays - <#= displayName #>.
        /// </summary>
        /// <param name="in">The input array.</param>
        /// <param name="out">The output array.</param>
        /// <param name="direction">The transform direction.</param>
        /// <returns>The error code.</returns>
        public CuFFTResult Exec<#= transformCode #>(
            ArrayView<<#= complexType #>> @in,
            ArrayView<<#= complexType #>> @out,
            CuFFTDirection direction) =>
            API.Exec<#= transformCode #>(
                PlanHandle,
                @in,
                @out,
                direction);

<#              } else if (transformCode == inputType.TypeCodeC2R) { #>
        /// <summary>
        /// Executes the plan on the given arrays - <#= displayName #>.
        /// </summary>
        /// <param name="in">The input array.</param>
        /// <param name="out">The output array.</param>
        /// <returns>The error code.</returns>
        public CuFFTResult Exec<#= transformCode #>(
            ArrayView<<#= complexType #>> @in,
            ArrayView<<#= inputType.RealType #>> @out) =>
            API.Exec<#= transformCode #>(
                PlanHandle,
                @in,
                @out);

<#              } else if (transformCode == inputType.TypeCodeR2C) { #>
        /// <summary>
        /// Executes the plan on the given arrays - <#= displayName #>.
        /// </summary>
        /// <param name="in">The input array.</param>
        /// <param name="out">The output array.</param>
        /// <returns>The error code.</returns>
        public CuFFTResult Exec<#= transformCode #>(
            ArrayView<<#= inputType.RealType #>> @in,
            ArrayView<<#= complexType #>> @out) =>
            API.Exec<#= transformCode #>(
                PlanHandle,
                @in,
                @out);

<#
                }
            }
        }
#>
<# } #>
        #endregion
    }
}