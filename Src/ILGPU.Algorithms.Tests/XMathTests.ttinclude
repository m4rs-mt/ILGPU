// ---------------------------------------------------------------------------------------
//                                   ILGPU Algorithms
//                        Copyright (c) 2020-2021 ILGPU Project
//                                    www.ilgpu.net
//
// File: XMathTests.ttinclude
//
// This file is part of ILGPU and is distributed under the University of Illinois Open
// Source License. See LICENSE.txt for details.
// ---------------------------------------------------------------------------------------

<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="Generic/ConfigurationBase.tt" #>
<#+
    static string ToUpperFirst(string s)
    {
        if (string.IsNullOrEmpty(s))
            return string.Empty;

        char[] a = s.ToCharArray();
        a[0] = char.ToUpper(a[0]);
        return new string(a);
    }

    struct Precision
    {
        public Precision(uint cpu, uint cuda, uint opencl)
        {
            CPU = cpu;
            Cuda = cuda;
            OpenCL = opencl;
        }

        public uint CPU { get; }
        public uint Cuda { get; }
        public uint OpenCL { get; }
    }

    class XMathFunctionBase
    {
        public XMathFunctionBase(string name, string dataType)
        {
            Name = name;
            DataType = dataType;
        }

        public string Name { get; }
        public string DataType { get; }

        public string ValueSuffix => DataType == "float" ? "f" : "";
        public string MathSuffix => DataType == "float" ? "F" : "";

        public string TestName => $"{Name}{ToUpperFirst(DataType)}";
        public string KernelName => $"{TestName}Kernel";
    }

    class XMathFunction : XMathFunctionBase
    {
        public XMathFunction(string name, string dataType, Precision precision)
            : base(name, dataType)
        {
            Precision = precision;
        }

        public Precision Precision { get; }
    }
#>