<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="../ILGPU.Tests/Generic/ConfigurationBase.tt" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
using Xunit;
using Xunit.Abstractions;

<#
var configurationFile = Host.ResolvePath("../ILGPU.Tests/Configurations.txt");
var configurations = TestConfig.Parse(configurationFile);
#>
namespace ILGPU.Tests.CPU
{
<# foreach (var (test, level, collection) in configurations) { #>
<#      var name = $"CPU{test}_{level}"; #>
    [Collection("CPUContextCollection<#= collection #>")]
    public sealed partial class <#= name #> : <#= test #>
    {
        public <#= name #>(
            ITestOutputHelper output,
            CPUTestContext<#= collection #> context)
            : base(output, context)
        { }
    }

<# } #>

<# foreach (var (config, level) in TestConfig.AllConfigurations) { #>
    public class CPUTestContext<#= config #> : CPUTestContext
    {
        public CPUTestContext<#= config #>()
            : base(OptimizationLevel.<#= level #>)
        { }
    }

    [CollectionDefinition("CPUContextCollection<#= config #>")]
    public class CPUContextCollection<#= config #> :
        ICollectionFixture<CPUTestContext<#= config #>> { }

<# } #>
}