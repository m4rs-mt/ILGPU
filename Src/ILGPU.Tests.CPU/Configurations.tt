<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="../ILGPU.Tests/Generic/ConfigurationBase.tt" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
using ILGPU.IR.Transformations;
using Xunit;
using Xunit.Abstractions;

<#
var configurationFile = Host.ResolvePath("../ILGPU.Tests/Configurations.txt");
var configurations = TestConfig.Parse(configurationFile, out var _);
#>
namespace ILGPU.Tests.CPU
{
<# foreach (var config in configurations) { #>
<#      foreach (var optLevel in config.OptimizationLevels) { #>
<#      var name = "CPU" + config.Name + "_" + optLevel; #>
    [Collection("CPUContextCollection<#= optLevel #>")]
    public sealed partial class <#= name #> : <#= config.Name #>
    {
        public <#= name #>(
            ITestOutputHelper output,
            CPUTestContext<#= optLevel #> context)
            : base(output, context)
        { }
    }

<#      } #>
<# } #>
}