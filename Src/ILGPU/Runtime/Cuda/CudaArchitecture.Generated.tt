// ---------------------------------------------------------------------------------------
//                                        ILGPU
//                           Copyright (c) 2023 ILGPU Project
//                                    www.ilgpu.net
//
// File: CudaArchitecture.Generated.tt/CudaArchitecture.Generated.cs
//
// This file is part of ILGPU and is distributed under the University of Illinois Open
// Source License. See LICENSE.txt for details.
// ---------------------------------------------------------------------------------------

<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="../../Static/TypeInformation.ttinclude" #>
<#@ include file="../../Static/CudaVersions.ttinclude" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
string rootPath = Host.ResolvePath("../../Static");
var versions = CudaVersions.Load(rootPath, "CudaVersions.xml");

var architectures =
    versions
    .Select(x => x.ArchitectureVersion)
    .Distinct()
    .OrderBy(x => x)
    .ToArray();
#>

namespace ILGPU.Runtime.Cuda
{
    partial struct CudaArchitecture
    {
        #region Constants

<# foreach (var arch in architectures) { #>
        /// <summary>
        /// The <#= arch.Major #>.<#= arch.Minor #> architecture.
        /// </summary>
        public static readonly CudaArchitecture SM_<#= arch.Major #><#= arch.Minor #> =
            new CudaArchitecture(<#= arch.Major #>, <#= arch.Minor #>);

<# } #>
        #endregion
    }
}