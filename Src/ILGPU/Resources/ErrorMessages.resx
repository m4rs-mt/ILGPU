<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CustomExceptionSemantics" xml:space="preserve">
    <value>Method '{0}' has custom exception semantics.</value>
  </data>
  <data name="InvalidEntryPointIndexParameter" xml:space="preserve">
    <value>An entry point must receive at least one index parameter</value>
  </data>
  <data name="InvalidEntryPointIndexParameterOfWrongType" xml:space="preserve">
    <value>An entry point must receive a compatible index type as first parameter</value>
  </data>
  <data name="InvalidEntryPointInstanceKernelMethod" xml:space="preserve">
    <value>Only static methods are supported at the moment</value>
  </data>
  <data name="InvalidILCode" xml:space="preserve">
    <value>Invalid IL Code</value>
  </data>
  <data name="NotSupportedArithmeticOperandTypes" xml:space="preserve">
    <value>Not supported arithmetic operands '{0}' &amp; '{1}'</value>
  </data>
  <data name="NotSupportedArrayCreation" xml:space="preserve">
    <value>Cannot create a dynamically sized array on an accelerator</value>
  </data>
  <data name="NotSupportedArrayDimension" xml:space="preserve">
    <value>The array dimension '{0}' is multidimensional. Currently only liner arrays are supported</value>
  </data>
  <data name="NotSupportedClassType" xml:space="preserve">
    <value>Class type '{0}' is not supported</value>
  </data>
  <data name="NotSupportedCompareOrArithmeticValue" xml:space="preserve">
    <value>Not supported compare or arithmetic value of type '{0}'</value>
  </data>
  <data name="NotSupportedILInstruction" xml:space="preserve">
    <value>Not supported IL instruction of type '{0}'</value>
  </data>
  <data name="NotSupportedILInstructionPossibleLambda" xml:space="preserve">
    <value>Not supported IL instruction in method '{0}'. Are you using a lambda closure?</value>
  </data>
  <data name="NotSupportedIndirectMethodCall" xml:space="preserve">
    <value>Not supported indirect call to a method with the signature '{0}'</value>
  </data>
  <data name="NotSupportedInstruction" xml:space="preserve">
    <value>Not supported instruction in method '{0}'.</value>
  </data>
  <data name="NotSupportedInterfaceType" xml:space="preserve">
    <value>Interface type '{0}' is not supported</value>
  </data>
  <data name="NotSupportedIntOperand" xml:space="preserve">
    <value>Not supported int operand of type '{0}'</value>
  </data>
  <data name="NotSupportedIsInstance" xml:space="preserve">
    <value>IsInstance is currently not supported</value>
  </data>
  <data name="NotSupportedKernelParameterType" xml:space="preserve">
    <value>Not supported kernel-parameter type '{0}'</value>
  </data>
  <data name="NotSupportedLoadOfStaticField" xml:space="preserve">
    <value>Cannot load from the static field '{0}' since it is not read only</value>
  </data>
  <data name="NotSupportedMethodJump" xml:space="preserve">
    <value>Not supported jump to method '{0}'</value>
  </data>
  <data name="NotSupportedRecursiveProgram" xml:space="preserve">
    <value>Not supported recursive program</value>
  </data>
  <data name="NotSupportedRuntimeMethod" xml:space="preserve">
    <value>Not supported runtime method '{0}'</value>
  </data>
  <data name="NotSupportedStoreToStaticField" xml:space="preserve">
    <value>Cannot store a value to the static field '{0}'</value>
  </data>
  <data name="NotSupportedType" xml:space="preserve">
    <value>Not supported type '{0}'</value>
  </data>
  <data name="NotSupportedVirtualMethodCall" xml:space="preserve">
    <value>Not supported virtual call to method '{0}'</value>
  </data>
  <data name="NotSupportedVirtualMethodCallToObject" xml:space="preserve">
    <value>Not supported virtual call to method '{0}' defined in type '{1}' that was called on '{2}'</value>
  </data>
  <data name="NotSupportedVirtualMethodCallToUnconstrainedInstance" xml:space="preserve">
    <value>Calling the virtual method '{0}' of unconstrained instance is not supported</value>
  </data>
  <data name="NativePlatformInvocationRequired" xml:space="preserve">
    <value>This operation is only permitted in native-OS-platform mode. The current runtime is '{0}' but the native OS platform is '{1}'</value>
  </data>
  <data name="CannotFindFieldOfType" xml:space="preserve">
    <value>Cannot find the field '{0}' of type '{1}'</value>
  </data>
  <data name="NotSupportedIntrinsic" xml:space="preserve">
    <value>Not supported intrinsic type '{0}'</value>
  </data>
  <data name="NativeMethodNotSupported" xml:space="preserve">
    <value>Native method '{0}' is not supported</value>
  </data>
  <data name="NotSupportedActivatorOperation" xml:space="preserve">
    <value>The operation '{0}' on the .Net activator is not supported.</value>
  </data>
  <data name="NotSupportedPlatform" xml:space="preserve">
    <value>Not supported platform '{0}' ({1} required)</value>
  </data>
  <data name="NotSupportedSizeOf" xml:space="preserve">
    <value>Could not resolve the native size of the type '{0}'</value>
  </data>
  <data name="CouldNotDeserializeMethod" xml:space="preserve">
    <value>Could not load method '{0}'</value>
  </data>
  <data name="CouldNotDeserializeType" xml:space="preserve">
    <value>Could not load type '{0}'</value>
  </data>
  <data name="ContextFlagsAreNotCompatible" xml:space="preserve">
    <value>The context flags '{0}' of the deserialized context are not compatible with the current flags '{1}'</value>
  </data>
  <data name="AssemblyVersionNotCompatible" xml:space="preserve">
    <value>The assembly version '{0}' is not compatible with the current version '{1}'</value>
  </data>
  <data name="CannotDeserializeDuplicateNodeId" xml:space="preserve">
    <value>Duplicate node id '{0}' detected</value>
  </data>
  <data name="InvalidEntryPointParameter" xml:space="preserve">
    <value>Not supported by-ref kernel parameter</value>
  </data>
  <data name="InvalidEntryPointWithoutDotNetMethod" xml:space="preserve">
    <value>Not supported entry point without a valid .Net runtime entry</value>
  </data>
  <data name="NotSupportedWarpIntrinsic" xml:space="preserve">
    <value>The warp intrinsic '{0}' is not supported</value>
  </data>
  <data name="NotSupportedInteropIntrinsic" xml:space="preserve">
    <value>The interop intrinsic '{0}' is not supported</value>
  </data>
  <data name="NotSupportedMathIntrinsic" xml:space="preserve">
    <value>The math intrinsic with {0} arguments is not supported</value>
  </data>
  <data name="NotSupportedSharedMemoryIntrinsic" xml:space="preserve">
    <value>The shared memory intrinsic '{0}' is not supported</value>
  </data>
  <data name="NotSupportedViewIntrinsic" xml:space="preserve">
    <value>The view intrinsic '{0}' is not supported</value>
  </data>
  <data name="CouldNotFindCorrespondingIRMethod" xml:space="preserve">
    <value>Could not find IR method that corresponds to the method handle '{0}'</value>
  </data>
  <data name="IntrinsicAcceleratorsBroken" xml:space="preserve">
    <value>Intrinsic accelerators broken (contact developers)</value>
  </data>
  <data name="InvalidKernelOperation" xml:space="preserve">
    <value>This operation can only be called from an ILGPU kernel</value>
  </data>
  <data name="NotSupportedArithmeticArgumentType" xml:space="preserve">
    <value>The type '{0}' is not supported in the scope of this arithmetic operation</value>
  </data>
  <data name="NotSupportedCompareArgumentType" xml:space="preserve">
    <value>The type '{0}' is not supported in the scope of this compare operation</value>
  </data>
  <data name="NotSupportedConversion" xml:space="preserve">
    <value>Cannot convert from '{0}' to type '{1}'</value>
  </data>
  <data name="NotSupportedFloatIntCast" xml:space="preserve">
    <value>Cannot cast type '{0}' to float/int</value>
  </data>
  <data name="NoUses" xml:space="preserve">
    <value>There are no uses to resolve</value>
  </data>
  <data name="NotSupportedByRefKernelParameters" xml:space="preserve">
    <value>Not supported by-ref kernel parameters</value>
  </data>
  <data name="NotSupportedDynamicAllocation" xml:space="preserve">
    <value>The allocation size of type '{0}' must be statically known and not a dynamic value '{1}'</value>
  </data>
  <data name="NotSupportedIntrinsicImplementation0" xml:space="preserve">
    <value>A function does not have an intrinsic implementation for this backend. 'EnableAlgorithms' from the Algorithms library not invoked?</value>
  </data>
  <data name="NotSupportedIntrinsicImplementation1" xml:space="preserve">
    <value>The function '{0}' does not have an intrinsic implementation for this backend. 'EnableAlgorithms' from the Algorithms library not invoked?</value>
  </data>
  <data name="InvalidDynamicSharedMemoryConfiguration" xml:space="preserve">
    <value>Dynamic shared memory elements specified but the kernel does not support dynamic shared memory bindings</value>
  </data>
  <data name="NotSupportedDynamicSharedMemoryAllocations" xml:space="preserve">
    <value>Dynamic shared memory allocations are not supported by this accelerator</value>
  </data>
  <data name="InternalCompilerError" xml:space="preserve">
    <value>An internal compiler error has been detected</value>
  </data>
  <data name="InternalCompilerErrorNull" xml:space="preserve">
    <value>Invalid null value</value>
  </data>
  <data name="LocationFileMessage" xml:space="preserve">
    <value>'{0}' in file '{1}' lines {2} - {3}</value>
  </data>
  <data name="LocationMethodMessage" xml:space="preserve">
    <value>'{0}' in method {1} declared in type {2}</value>
  </data>
  <data name="LocationTypeMessage" xml:space="preserve">
    <value>'{0}' related to type {1} (managed type '{2}')</value>
  </data>
  <data name="NotSupportedStructureLayout" xml:space="preserve">
    <value>The type '{0}' has an unsupported structure layout</value>
  </data>
</root>