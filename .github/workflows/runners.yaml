name: Runners Deployment

on:
  workflow_run:
    workflows: ["CI"]
    types: 
      - completed
      - requested

jobs:
  is-fork:
    runs-on: ubuntu-latest
    steps:
      - name: Check if repo is fork
        id: is-fork
        run: echo "::set-output name=fork::$(gh api repos/${{ github.repository }} | jq .fork)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      fork: ${{ steps.is-fork.outputs.fork }}
  manage-runners:
    runs-on: ubuntu-latest
    needs: is-fork
    environment: cuda-test-infra
    if: ${{ needs.is-fork.outputs.fork == 'false' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ilgpu

      - name: Checkout Pulumi Ephemeral Github Runner project
        uses: actions/checkout@v2
        with:
          repository: pavlovic-ivan/ephemeral-github-runner-gcp
          ref: main
          path: pulumi

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Setup Pulumi
        run: |
          cd pulumi
          curl -fsSL https://get.pulumi.com | sh
          npm install

      - name: Pulumi login
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCE_SA_KEY }}
        run: pulumi login ${{ secrets.GS_BUCKET }}

      - name: Execute Pulumi
        env:
          PAT: ${{ secrets.PAT }}
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}
          GOOGLE_CREDENTIALS: ${{ secrets.GCE_SA_KEY }}
          GOOGLE_REGION: ${{ secrets.GOOGLE_REGION }}
          PULUMI_STACK_NAME: ilgpu_${{ github.event.workflow_run.id }}
          GCE_SA_EMAIL: ${{ secrets.GCE_SA_EMAIL }}
        run: |
          cd pulumi
          if [[ ${{ github.event.action }} == 'requested' ]]; then
            pulumi stack init -s $PULUMI_STACK_NAME
            pulumi config set ephemeral-github-runner:repo ${{ github.repository }} --config-file ../ilgpu/config.yaml
            pulumi up --diff --config-file ../ilgpu/config.yaml -y
          elif [[ ${{ github.event.action }} == 'completed' ]]; then
            pulumi stack select $PULUMI_STACK_NAME
            pulumi destroy --config-file ../ilgpu/config.yaml -y
            pulumi stack rm $PULUMI_STACK_NAME -y
          else
            echo "Workflow failed. Unrecognized workflow event received: github.event.action=${{ github.event.action }}"
            exit 1
          fi
