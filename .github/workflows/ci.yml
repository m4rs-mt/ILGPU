name: CI

on:
  push:
  pull_request:

jobs:
  build-and-test:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.id != github.event.pull_request.base.repo.id
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.300
      - name: Restore tools
        run: dotnet tool restore
        working-directory: ./Src
      - name: Build templates
        # TargetFramework specified so this only runs once rather than per framework
        run: dotnet msbuild -t:TextTemplateTransform -p:TargetFramework=NA Src
      - name: Debug Build
        run: dotnet build --configuration=Debug -p:TreatWarningsAsErrors=true Src
      - name: Release Build
        run: dotnet build --configuration=Release -p:TreatWarningsAsErrors=true Src
      - name: CPU Tests
        run: dotnet test --configuration=Release ./Src/ILGPU.Tests.CPU
      - name: Set up NuGet
        if: runner.os == 'Windows'
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: '5.x'
      - name: Create NuGet package
        if: runner.os == 'Windows'
        run: nuget pack .nuget/ILGPU.nuspec -Symbols -SymbolPackageFormat snupkg
      - name: Upload NuGet package artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v2
        with:
          name: nuget-package
          path: ILGPU.*.*nupkg

  publish-nuget:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-and-test
    runs-on: windows-latest
    steps:
      - name: Download NuGet package artifact
        uses: actions/download-artifact@v2
        with:
          name: nuget-package
      - name: Publish to NuGet
        shell: bash
        run: dotnet nuget push ILGPU.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
